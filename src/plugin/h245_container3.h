/* 
 * h245_container3.h
 *
 * Header for saving the ID's for Ethereal protocol items
 *
 * H.323 for Ethereal
 *
 * Copyright (c) 2002 Koninklijke Philips NV
 *
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
 * the License for the specific language governing rights and limitations
 * under the License.
 *
 * The Original Code is H.323 for Ethereal.
 *
 * The Initial Developer of the Original Code is Koninklijke Philips NV.
 *
 * All Rights Reserved.
 *
 * Contributor(s): ______________________________________.
 *
 *
 */
//
// h245_container3.h
//
// Code automatically generated by asnparse.
//

#ifndef H245_INTEGER_CONTAINER_3_H
#define  H245_INTEGER_CONTAINER_3_H

class H245_3_Integer_Container
{
  public:
    H245_3_Integer_Container();

    int hf_h245_H263VideoCapability_qcifMPI;
    int hf_h245_H263VideoCapability_cifMPI;
    int hf_h245_H263VideoCapability_cif4MPI;
    int hf_h245_H263VideoCapability_cif16MPI;
    int hf_h245_H263VideoCapability_maxBitRate;
    int hf_h245_H263VideoCapability_unrestrictedVector;
    int hf_h245_H263VideoCapability_arithmeticCoding;
    int hf_h245_H263VideoCapability_advancedPrediction;
    int hf_h245_H263VideoCapability_pbFrames;
    int hf_h245_H263VideoCapability_temporalSpatialTradeOffCapability;
    int hf_h245_H263VideoCapability_hrd_B;
    int hf_h245_H263VideoCapability_bppMaxKb;
    int hf_h245_H263VideoCapability_slowSqcifMPI;
    int hf_h245_H263VideoCapability_slowQcifMPI;
    int hf_h245_H263VideoCapability_slowCifMPI;
    int hf_h245_H263VideoCapability_slowCif4MPI;
    int hf_h245_H263VideoCapability_slowCif16MPI;
    int hf_h245_H263VideoCapability_errorCompensation;
    int ett_h245_H263VideoCapability_enhancementLayerInfo;
    int ett_h245_H263VideoCapability_h263Options;
    int hf_h245_EnhancementOptions_sqcifMPI;
    int hf_h245_EnhancementOptions_qcifMPI;
    int hf_h245_EnhancementOptions_cifMPI;
    int hf_h245_EnhancementOptions_cif4MPI;
    int hf_h245_EnhancementOptions_cif16MPI;
    int hf_h245_EnhancementOptions_maxBitRate;
    int hf_h245_EnhancementOptions_unrestrictedVector;
    int hf_h245_EnhancementOptions_arithmeticCoding;
    int hf_h245_EnhancementOptions_temporalSpatialTradeOffCapability;
    int hf_h245_EnhancementOptions_slowSqcifMPI;
    int hf_h245_EnhancementOptions_slowQcifMPI;
    int hf_h245_EnhancementOptions_slowCifMPI;
    int hf_h245_EnhancementOptions_slowCif4MPI;
    int hf_h245_EnhancementOptions_slowCif16MPI;
    int hf_h245_EnhancementOptions_errorCompensation;
    int ett_h245_EnhancementOptions_h263Options;
    int ett_h245_ModeElement_type;
    int ett_h245_ModeElement_h223ModeParameters;
    int ett_h245_ModeElement_v76ModeParameters;
    int ett_h245_ModeElement_h2250ModeParameters;
    int ett_h245_BEnhancementParameters_enhancementOptions;
    int hf_h245_BEnhancementParameters_numberOfBPictures;
  private:
};

#endif

// End of h245_container3.h
